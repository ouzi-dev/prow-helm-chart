---
apiVersion: v1
kind: Secret
metadata:
  name: github-oauth-secret
type: Opaque
data:
  client-id: {{ .Values.secrets.oauthproxy.clientid }}
  client-secret: {{ .Values.secrets.oauthproxy.clientsecret }}
  cookie-secret:  {{ randAlphaNum 20 | b64enc | quote }} 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-proxy-nginx
data:
  nginx.conf: |
    worker_processes 5;

    events {
    }

    http {
      server {
        listen 80 default_server;

        location = /healthcheck {
          add_header Content-Type text/plain;
          return 200 'ok';
        }

        location ~ /redirect/(.*) {
          return 307 https://$1?$args;
        }
      }
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      volumes:
        - name: nginx
          configMap:
            name: oauth2-proxy-nginx
      containers:
        - name: nginx
          image: nginx:1.15.9-alpine
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 0.2
              memory: 128Mi
          ports:
            - name: nginx
              containerPort: 80
          volumeMounts:
            - name: nginx
              mountPath: /etc/nginx/
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            initialDelaySeconds: 3
            timeoutSeconds: 2
            failureThreshold: 2
        - name: oauth2-proxy
          image: {{ .Values.oauthproxy.image }}
          imagePullPolicy: Always
          args:
          - --provider=github
          - --email-domain=*
          - --github-org={{ .Values.github.org }}
          - --upstream=file:///dev/null
          - --upstream=http://localhost/redirect/
          - --http-address=0.0.0.0:4180
          - --cookie-domain=.{{ .Values.baseurl }}
          - --footer=-
          # Register a new application
          # https://github.com/settings/applications/new
          env:
          - name: OAUTH2_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: github-oauth-secret
                key: client-id
          - name: OAUTH2_PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: github-oauth-secret
                key: client-secret
          # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
          - name: OAUTH2_PROXY_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: github-oauth-secret
                key: cookie-secret
          ports:
          - containerPort: 4180
            protocol: TCP
            name: http
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
spec:
  ports:
  - name: http
    protocol: TCP
    targetPort: http
    port: 80
  selector:
    k8s-app: oauth2-proxy
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    certmanager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
  name: oauth2-proxy
spec:
  rules:
  - host: {{ .Values.baseurl }}
    http:
      paths:
      - backend:
          serviceName: oauth2-proxy
          servicePort: http
        path: /oauth2
  tls:
    - hosts:
      - {{ .Values.baseurl }}
      secretName: prow-tls